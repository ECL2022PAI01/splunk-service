# Based on integration tests in prometheus-service
# https://github.com/keptn-contrib/prometheus-service/blob/master/.github/workflows/integration-tests.yaml

name: Integration Tests
on:
  schedule:
    # * is a special character in YAML, so you have to quote this string
    - cron: "0 3 * * 1-5" # run integration tests at 3 AM, monday to friday (1-5)
  push:
    branches:
      - "master"
      - "end2end"
  workflow_dispatch: # run integration tests only when triggered manually

defaults:
  run:
    shell: bash

jobs:
  integration_test:
    name: "Integration Tests"
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        keptn-version: ["1.0.0"] # https://github.com/keptn/keptn/releases
        splunk-version: ["0.1.0"] # chart version
    env:
      GO_VERSION: 1.17
      GOPROXY: "https://proxy.golang.org"
      GO111MODULE: "on"
      BRANCH: ${{ github.head_ref || github.ref_name }}
      ENABLE_E2E_TEST: true
      JES_VERSION: "0.3.0"
      JES_NAMESPACE: keptn-jes
      GITEA_PROVISIONER_VERSION: "0.1.1"
      GITEA_ADMIN_USERNAME: GiteaAdmin
      GITEA_NAMESPACE: gitea
      KUBECONFIG: "${{ github.workspace }}/.kube/config"
      TEST_REPORT_FILENAME: test-report-${{ github.run_id }}-keptn-${{ matrix.keptn-version }}-splunk-${{ matrix.prometheus-version }}.json

    steps:
      # Checkout code for the integrations tests in test/e2e
      - name: Check out code.
        uses: actions/checkout@v3.0.2
      - name: Generate Gitea credentials
        id: gitea_credentials
        run: |
          password=$(date +%s | sha256sum | base64 | head -c 32)
          echo "::add-mask::$password"
          echo "GITEA_ADMIN_PASSWORD=$password" >> "$GITHUB_OUTPUT"

      # Prepare minikube + Keptn environment
      - name: Install and start minikube
        run: |
          # wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
          # wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add -
          # echo "deb [arch=amd64] http://download.virtualbox.org/virtualbox/debian $(lsb_release -cs) contrib" | sudo tee -a /etc/apt/sources.list.d/virtualbox.list
          curl -LO https://storage.googleapis.com/minikube/releases/v1.24.0/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          /usr/local/bin/minikube start --cpus=2 --memory=5GB
          minikube tunnel &> /dev/null &
          echo "minikube ready!"

      - name: Install splunk-service
        env:
          SPLUNK_HOST: "localhost"
          SPLUNK_PORT: 8089
          SPLUNK_USERNAME: admin
          SPLUNK_PASSWORD: ${{ steps.splunk_credentials.outputs.SPLUNK_PASSWORD }}
          SPLUNK_VERSION: "0.1.0"
        run: |
          tar -czvf splunk-service.tgz chart/
          helm upgrade --install -n keptn --create-namespace splunk-service \
            splunk-service.tgz \
            --set splunkservice.spHost=$SPLUNK_HOST \
            --set splunkservice.spPort=$SPLUNK_PORT\
            --set splunkservice.spUsername=$SPLUNK_USERNAME \
            --set splunkservice.spPassword=$SPLUNK_PASSWORD \
            --wait

          kubectl -n keptn get deployment splunk-service -o wide

      # - name: Generate Gitea credentials
      #   id: gitea_credentials
      #   run: |
      #     password=$(date +%s | sha256sum | base64 | head -c 32)
      #     echo "::add-mask::$password"
      #     echo "GITEA_ADMIN_PASSWORD=$password" >> "$GITHUB_OUTPUT"

      # - name: Install Gitea
      #   id: gitea
      #   env:
      #     GITEA_ADMIN_PASSWORD: ${{ steps.gitea_credentials.outputs.GITEA_ADMIN_PASSWORD }}
      #   run: |
      #     export GITEA_ENDPOINT="http://gitea-http.${GITEA_NAMESPACE}:3000"

      - name: Setup Go
        uses: actions/setup-go@v3.2.0
        with:
          go-version-file: "go.mod"

      - name: Install gotestsum
        shell: bash
        run: go install gotest.tools/gotestsum@latest

      # - name: Install splunk enterprise with docker
      #   env:
      #     SPLUNK_PASSWORD: ${{ steps.splunk_credentials.outputs.SPLUNK_PASSWORD }}
      #     SPLUNK_USERNAME: admin
      #     SPLUNK_PORT: "8089"
      #   run: |
      #     docker pull splunk/splunk:latest
      #     docker run -d -p 8089:$SPLUNK_PORT -e "SPLUNK_START_ARGS=--accept-license" -e "SPLUNK_PASSWORD=$SPLUNK_PASSWORD" --name splunk-entreprise splunk/splunk:latest

     
      - name: Setup Go
        uses: actions/setup-go@v3.2.0
        with:
          go-version-file: "go.mod"

      - name: Install gotestsum
        shell: bash
        run: go install gotest.tools/gotestsum@latest
      

      

      # - name: Install splunk enterprise with docker
      #   env:
      #     SPLUNK_PASSWORD: ${{ steps.splunk_credentials.outputs.SPLUNK_PASSWORD }}
      #     SPLUNK_USERNAME: admin
      #     SPLUNK_PORT: "8089"
      #   run: |
      #     docker pull splunk/splunk:latest
      #     docker run -d -p 8089:$SPLUNK_PORT -e "SPLUNK_START_ARGS=--accept-license" -e "SPLUNK_PASSWORD=$SPLUNK_PASSWORD" --name splunk-entreprise splunk/splunk:latest


     

        # If we failed any previous step we might have a problem and not reporting anything for the version
      - name: Create pipeline failure report
        if: failure()
        run: |
          echo "Failed to run integration tests!"
          echo '{"Test": "TestGitHub Pipeline", "Action": "fail"}' >> $TEST_REPORT_FILENAME

      - name: Run Integration tests
        continue-on-error: true
        env:
          KEPTN_ENDPOINT: ${{ steps.install_keptn.outputs.KEPTN_API_URL }}
          KEPTN_API_TOKEN: ${{ steps.install_keptn.outputs.KEPTN_API_TOKEN }}
          GITEA_ADMIN_PASSWORD: ${{ steps.gitea_credentials.outputs.GITEA_ADMIN_PASSWORD }}
          GITEA_ENDPOINT: ${{ steps.gitea.outputs.GITEA_ENDPOINT }}
        run: |
          gotestsum --format testname --jsonfile $TEST_REPORT_FILENAME ./test/e2e/...
  
      - name: Save pod logs - splunk
        run: |
          kubectl logs -n keptn -c splunk-service $(kubectl -n keptn get pods | grep splunk | awk '{print $1}' | head -1) > splunk_logs.txt & export LOG_PID=$!
          kubectl logs -n keptn $(kubectl -n keptn-jes get pods | grep job-executor | awk '{print $1}' | head -1)
      - name: Install Job-executor-service
        env:
          KEPTN_API_PROTOCOL: http
          KEPTN_API_TOKEN: ${{ steps.install_keptn.outputs.KEPTN_API_TOKEN }}
          KEPTN_ENDPOINT: ${{ steps.install_keptn.outputs.KEPTN_HTTP_ENDPOINT }}
          TASK_SUBSCRIPTION: "sh.keptn.event.deployment.triggered\\,sh.keptn.event.test.triggered"
        run: |
          helm upgrade --install \
            --create-namespace -n ${JES_NAMESPACE} \
            job-executor-service \
            "https://github.com/keptn-contrib/job-executor-service/releases/download/${JES_VERSION}/job-executor-service-${JES_VERSION}.tgz" \
            --set remoteControlPlane.autoDetect.enabled="false" \
            --set remoteControlPlane.topicSubscription=${TASK_SUBSCRIPTION} \
            --set remoteControlPlane.api.token=${KEPTN_API_TOKEN} \
            --set remoteControlPlane.api.hostname=${KEPTN_ENDPOINT} \
            --set remoteControlPlane.api.protocol=${KEPTN_API_PROTOCOL} \
            --wait
          kubectl apply \
            -f test/data/helm-serviceAccount.yaml \
            -f test/data/helm-clusterRole.yaml \
            -f test/data/helm-clusterRoleBinding.yaml   
      - name: Save pod logs - job
        run: |
          kubectl logs -n keptn $(kubectl -n keptn-jes get pods | grep job-executor | awk '{print $1}' | head -1) > jes_logs.txt & export LOG_PID=$!
          kubectl logs -n keptn $(kubectl -n keptn-jes get pods | grep job-executor | awk '{print $1}' | head -1)